module counter();
	input logic CLOCK_50;
	input [3:0] KEY;
	logic reset; 
	logic [31:0] div_clk; 
	logic counter;
  
	assign reset = KEY[0]; 
	parameter whichClock = 25; // 0.75 Hz clock 
	clock_divider cdiv (.clock(CLOCK_50),  
                       .reset(reset),  
                       .divided_clocks(div_clk));   
  
	//  Clock  selection;  allows  for  easy  switching  between  simulation  and  board clocks 
	logic clkSelect; 
	// Uncomment ONE of the following two lines depending on intention 
  
	assign clkSelect = CLOCK_50;          // for simulation 
	// assign clkSelect = div_clk[whichClock]; // for board 
	
	always @(posedge clk)
		if (reset) 
			counter <= 5'b00000;
		else if (counter) 
			counter <= counter + 1;
		else if (in_1 == 5'b11111) 
			begin 
				counter = 5'b11111;
			end
	end
endmodule